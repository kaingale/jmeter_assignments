
name: Run JMeter Assignment

on:
  push:
    branches:
      - main
    paths:
      - '**/*.jmx'
  workflow_dispatch:
    inputs:
      jmx_file:
        description: 'Path to the JMX file to run'
        required: true
        default: './Parameterization_blazedemo.jmx'

jobs:
  run-jmeter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Pick JMX file
        id: pickjmx
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "JMX_FILE=${{ github.event.inputs.jmx_file }}" >> $GITHUB_ENV
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.jmx$' | head -n 1 || true)
            if [ -z "$CHANGED" ]; then
              echo "No changed JMX files, skipping test."
              exit 0
            fi
            echo "JMX_FILE=$CHANGED" >> $GITHUB_ENV
            echo "Changed JMX file: $CHANGED"
          fi

      - name: Create Docker Compose file
        run: |
          cat > docker-compose.yml << EOF
          version: '3'
          services:
            jmeter-master:
              image: justb4/jmeter
              command: >
                -Dserver.rmi.ssl.disable=true -n -t /mnt/\${JMX_FILE} -l /mnt/results/result.jtl -R jmeter-slave1,jmeter-slave2
              volumes:
                - .:/mnt
              depends_on:
                - jmeter-slave1
                - jmeter-slave2
            jmeter-slave1:
              image: justb4/jmeter
              command: >
                -Dserver.rmi.ssl.disable=true -s
              volumes:
                - .:/mnt
            jmeter-slave2:
              image: justb4/jmeter
              command: >
                -Dserver.rmi.ssl.disable=true -s
              volumes:
                - .:/mnt
          EOF

          
      - name: Run distributed JMeter test
        run: |
          mkdir -p results
          export JMX_FILE="$JMX_FILE"
          docker-compose up --abort-on-container-exit jmeter-master
        env:
          JMX_FILE: ${{ env.JMX_FILE }}

      - name: Print JMeter results
        run: cat results/result.jtl || echo "No results file found"
